// Code generated by protoc-gen-go. DO NOT EDIT.
// source: user.proto

package usercenter

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// 公共返回信息
type BaseResp struct {
	Code                 int32    `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg                  string   `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BaseResp) Reset()         { *m = BaseResp{} }
func (m *BaseResp) String() string { return proto.CompactTextString(m) }
func (*BaseResp) ProtoMessage()    {}
func (*BaseResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_116e343673f7ffaf, []int{0}
}

func (m *BaseResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BaseResp.Unmarshal(m, b)
}
func (m *BaseResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BaseResp.Marshal(b, m, deterministic)
}
func (m *BaseResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BaseResp.Merge(m, src)
}
func (m *BaseResp) XXX_Size() int {
	return xxx_messageInfo_BaseResp.Size(m)
}
func (m *BaseResp) XXX_DiscardUnknown() {
	xxx_messageInfo_BaseResp.DiscardUnknown(m)
}

var xxx_messageInfo_BaseResp proto.InternalMessageInfo

func (m *BaseResp) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *BaseResp) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

// 注册请求体
type RegisterUserReq struct {
	NickName             string   `protobuf:"bytes,1,opt,name=nick_name,json=nickName,proto3" json:"nick_name,omitempty"`
	PassWord             string   `protobuf:"bytes,2,opt,name=pass_word,json=passWord,proto3" json:"pass_word,omitempty"`
	Email                string   `protobuf:"bytes,3,opt,name=email,proto3" json:"email,omitempty"`
	HeadPortraitUrl      string   `protobuf:"bytes,4,opt,name=head_portrait_url,json=headPortraitUrl,proto3" json:"head_portrait_url,omitempty"`
	Gender               int32    `protobuf:"varint,5,opt,name=gender,proto3" json:"gender,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RegisterUserReq) Reset()         { *m = RegisterUserReq{} }
func (m *RegisterUserReq) String() string { return proto.CompactTextString(m) }
func (*RegisterUserReq) ProtoMessage()    {}
func (*RegisterUserReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_116e343673f7ffaf, []int{1}
}

func (m *RegisterUserReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RegisterUserReq.Unmarshal(m, b)
}
func (m *RegisterUserReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RegisterUserReq.Marshal(b, m, deterministic)
}
func (m *RegisterUserReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RegisterUserReq.Merge(m, src)
}
func (m *RegisterUserReq) XXX_Size() int {
	return xxx_messageInfo_RegisterUserReq.Size(m)
}
func (m *RegisterUserReq) XXX_DiscardUnknown() {
	xxx_messageInfo_RegisterUserReq.DiscardUnknown(m)
}

var xxx_messageInfo_RegisterUserReq proto.InternalMessageInfo

func (m *RegisterUserReq) GetNickName() string {
	if m != nil {
		return m.NickName
	}
	return ""
}

func (m *RegisterUserReq) GetPassWord() string {
	if m != nil {
		return m.PassWord
	}
	return ""
}

func (m *RegisterUserReq) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *RegisterUserReq) GetHeadPortraitUrl() string {
	if m != nil {
		return m.HeadPortraitUrl
	}
	return ""
}

func (m *RegisterUserReq) GetGender() int32 {
	if m != nil {
		return m.Gender
	}
	return 0
}

// 登录请求体
type LoginReq struct {
	Account              string   `protobuf:"bytes,1,opt,name=account,proto3" json:"account,omitempty"`
	PassWord             string   `protobuf:"bytes,2,opt,name=pass_word,json=passWord,proto3" json:"pass_word,omitempty"`
	LoginType            int32    `protobuf:"varint,3,opt,name=login_type,json=loginType,proto3" json:"login_type,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LoginReq) Reset()         { *m = LoginReq{} }
func (m *LoginReq) String() string { return proto.CompactTextString(m) }
func (*LoginReq) ProtoMessage()    {}
func (*LoginReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_116e343673f7ffaf, []int{2}
}

func (m *LoginReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LoginReq.Unmarshal(m, b)
}
func (m *LoginReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LoginReq.Marshal(b, m, deterministic)
}
func (m *LoginReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LoginReq.Merge(m, src)
}
func (m *LoginReq) XXX_Size() int {
	return xxx_messageInfo_LoginReq.Size(m)
}
func (m *LoginReq) XXX_DiscardUnknown() {
	xxx_messageInfo_LoginReq.DiscardUnknown(m)
}

var xxx_messageInfo_LoginReq proto.InternalMessageInfo

func (m *LoginReq) GetAccount() string {
	if m != nil {
		return m.Account
	}
	return ""
}

func (m *LoginReq) GetPassWord() string {
	if m != nil {
		return m.PassWord
	}
	return ""
}

func (m *LoginReq) GetLoginType() int32 {
	if m != nil {
		return m.LoginType
	}
	return 0
}

// 登录返回信息
type LoginResp struct {
	Code                 int32    `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg                  string   `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Token                string   `protobuf:"bytes,3,opt,name=token,proto3" json:"token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LoginResp) Reset()         { *m = LoginResp{} }
func (m *LoginResp) String() string { return proto.CompactTextString(m) }
func (*LoginResp) ProtoMessage()    {}
func (*LoginResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_116e343673f7ffaf, []int{3}
}

func (m *LoginResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LoginResp.Unmarshal(m, b)
}
func (m *LoginResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LoginResp.Marshal(b, m, deterministic)
}
func (m *LoginResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LoginResp.Merge(m, src)
}
func (m *LoginResp) XXX_Size() int {
	return xxx_messageInfo_LoginResp.Size(m)
}
func (m *LoginResp) XXX_DiscardUnknown() {
	xxx_messageInfo_LoginResp.DiscardUnknown(m)
}

var xxx_messageInfo_LoginResp proto.InternalMessageInfo

func (m *LoginResp) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *LoginResp) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

func (m *LoginResp) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

func init() {
	proto.RegisterType((*BaseResp)(nil), "usercenter.BaseResp")
	proto.RegisterType((*RegisterUserReq)(nil), "usercenter.RegisterUserReq")
	proto.RegisterType((*LoginReq)(nil), "usercenter.LoginReq")
	proto.RegisterType((*LoginResp)(nil), "usercenter.LoginResp")
}

func init() {
	proto.RegisterFile("user.proto", fileDescriptor_116e343673f7ffaf)
}

var fileDescriptor_116e343673f7ffaf = []byte{
	// 327 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x52, 0xc1, 0x4a, 0xeb, 0x40,
	0x14, 0x25, 0xaf, 0x4d, 0x5f, 0x72, 0x79, 0xd0, 0xbe, 0xa1, 0x4a, 0x68, 0x11, 0x4a, 0x56, 0xc5,
	0x45, 0x11, 0xf5, 0x07, 0xd4, 0x85, 0x1b, 0x11, 0x19, 0x2d, 0x2e, 0xe3, 0x98, 0x5c, 0x62, 0x68,
	0x32, 0x33, 0xde, 0x99, 0x2a, 0xfd, 0x06, 0xbf, 0xc3, 0xff, 0x94, 0x99, 0xa6, 0x5a, 0x45, 0xc4,
	0xdd, 0x3d, 0xe7, 0x24, 0x37, 0xe7, 0x9e, 0x13, 0x80, 0xa5, 0x41, 0x9a, 0x69, 0x52, 0x56, 0x31,
	0x3f, 0xe7, 0x28, 0x2d, 0x52, 0x7a, 0x00, 0xd1, 0xa9, 0x30, 0xc8, 0xd1, 0x68, 0xc6, 0xa0, 0x9b,
	0xab, 0x02, 0x93, 0x60, 0x12, 0x4c, 0x43, 0xee, 0x67, 0x36, 0x80, 0x4e, 0x63, 0xca, 0xe4, 0xcf,
	0x24, 0x98, 0xc6, 0xdc, 0x8d, 0xe9, 0x6b, 0x00, 0x7d, 0x8e, 0x65, 0x65, 0x2c, 0xd2, 0xdc, 0x20,
	0x71, 0x7c, 0x64, 0x63, 0x88, 0x65, 0x95, 0x2f, 0x32, 0x29, 0x9a, 0xf5, 0xeb, 0x31, 0x8f, 0x1c,
	0x71, 0x29, 0x1a, 0x74, 0xa2, 0x16, 0xc6, 0x64, 0xcf, 0x8a, 0x8a, 0x76, 0x51, 0xe4, 0x88, 0x5b,
	0x45, 0x05, 0x1b, 0x42, 0x88, 0x8d, 0xa8, 0xea, 0xa4, 0xe3, 0x85, 0x35, 0x60, 0xfb, 0xf0, 0xff,
	0x01, 0x45, 0x91, 0x69, 0x45, 0x96, 0x44, 0x65, 0xb3, 0x25, 0xd5, 0x49, 0xd7, 0x3f, 0xd1, 0x77,
	0xc2, 0x55, 0xcb, 0xcf, 0xa9, 0x66, 0xbb, 0xd0, 0x2b, 0x51, 0x16, 0x48, 0x49, 0xe8, 0x7d, 0xb7,
	0x28, 0xbd, 0x83, 0xe8, 0x42, 0x95, 0x95, 0x74, 0xfe, 0x12, 0xf8, 0x2b, 0xf2, 0x5c, 0x2d, 0xa5,
	0x6d, 0xdd, 0x6d, 0xe0, 0xcf, 0xe6, 0xf6, 0x00, 0x6a, 0xb7, 0x22, 0xb3, 0x2b, 0x8d, 0xde, 0x61,
	0xc8, 0x63, 0xcf, 0xdc, 0xac, 0x34, 0xa6, 0xe7, 0x10, 0xb7, 0x5f, 0xf8, 0x6d, 0x78, 0xee, 0x5c,
	0xab, 0x16, 0x28, 0x37, 0xe7, 0x7a, 0x70, 0xf8, 0x12, 0xc0, 0xc0, 0x45, 0x79, 0xe6, 0x3b, 0xb9,
	0x46, 0x7a, 0x42, 0x62, 0x27, 0xf0, 0x6f, 0x3b, 0x66, 0x36, 0x9e, 0x7d, 0xd4, 0x36, 0xfb, 0x52,
	0xc0, 0x68, 0xb8, 0x2d, 0xbe, 0x17, 0x7a, 0x0c, 0xa1, 0x37, 0xc8, 0x3e, 0xc9, 0x9b, 0x54, 0x46,
	0x3b, 0xdf, 0xb0, 0x46, 0xdf, 0xf7, 0xfc, 0x5f, 0x72, 0xf4, 0x16, 0x00, 0x00, 0xff, 0xff, 0xe0,
	0x29, 0xe5, 0xd4, 0x33, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// UserCenterServerClient is the client API for UserCenterServer service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type UserCenterServerClient interface {
	RegisterUser(ctx context.Context, in *RegisterUserReq, opts ...grpc.CallOption) (*BaseResp, error)
	Login(ctx context.Context, in *LoginReq, opts ...grpc.CallOption) (*LoginResp, error)
}

type userCenterServerClient struct {
	cc grpc.ClientConnInterface
}

func NewUserCenterServerClient(cc grpc.ClientConnInterface) UserCenterServerClient {
	return &userCenterServerClient{cc}
}

func (c *userCenterServerClient) RegisterUser(ctx context.Context, in *RegisterUserReq, opts ...grpc.CallOption) (*BaseResp, error) {
	out := new(BaseResp)
	err := c.cc.Invoke(ctx, "/usercenter.UserCenterServer/RegisterUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userCenterServerClient) Login(ctx context.Context, in *LoginReq, opts ...grpc.CallOption) (*LoginResp, error) {
	out := new(LoginResp)
	err := c.cc.Invoke(ctx, "/usercenter.UserCenterServer/Login", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// UserCenterServerServer is the server API for UserCenterServer service.
type UserCenterServerServer interface {
	RegisterUser(context.Context, *RegisterUserReq) (*BaseResp, error)
	Login(context.Context, *LoginReq) (*LoginResp, error)
}

// UnimplementedUserCenterServerServer can be embedded to have forward compatible implementations.
type UnimplementedUserCenterServerServer struct {
}

func (*UnimplementedUserCenterServerServer) RegisterUser(ctx context.Context, req *RegisterUserReq) (*BaseResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RegisterUser not implemented")
}
func (*UnimplementedUserCenterServerServer) Login(ctx context.Context, req *LoginReq) (*LoginResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Login not implemented")
}

func RegisterUserCenterServerServer(s *grpc.Server, srv UserCenterServerServer) {
	s.RegisterService(&_UserCenterServer_serviceDesc, srv)
}

func _UserCenterServer_RegisterUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RegisterUserReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserCenterServerServer).RegisterUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/usercenter.UserCenterServer/RegisterUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserCenterServerServer).RegisterUser(ctx, req.(*RegisterUserReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserCenterServer_Login_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LoginReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserCenterServerServer).Login(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/usercenter.UserCenterServer/Login",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserCenterServerServer).Login(ctx, req.(*LoginReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _UserCenterServer_serviceDesc = grpc.ServiceDesc{
	ServiceName: "usercenter.UserCenterServer",
	HandlerType: (*UserCenterServerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "RegisterUser",
			Handler:    _UserCenterServer_RegisterUser_Handler,
		},
		{
			MethodName: "Login",
			Handler:    _UserCenterServer_Login_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "user.proto",
}
